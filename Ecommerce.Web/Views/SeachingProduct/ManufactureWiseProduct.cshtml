@model Ecommerce.Web.ViewModels.ProductListViewModel
@{
    ViewBag.Title = "CategoryWiseProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- page wrapper start -->
<div class="page-main-wrapper">
    <div class="container">
        <div class="row">
            <!-- sidebar start -->
            <div class="col-lg-3 order-2 order-lg-1">
                <div class="shop-sidebar-wrap mt-md-28 mt-sm-28">
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <!-- manufacturer start -->
                    <div class="sidebar-widget mb-30">
                        <div class="sidebar-title mb-10">
                            <h3>Manufacturers</h3>
                        </div>
                        <div class="sidebar-widget-body">
                            <ul>
                                @foreach (var manufacture in Model.ManufactureList)
                                {
                                    <li><i class="fa fa-angle-right"></i><a href="@Url.Action("ManufactureWiseProduct", "SeachingProduct", new { ID = manufacture.ID })">@manufacture.ManufacturerName</a><span>@Model.Manufacturers.Where(x => x.ManufacturerID == manufacture.ID).Count()</span></li>
                                }
                            </ul>
                        </div>
                    </div>
                    <!-- manufacturer end -->

                    <!-- product tag start -->
                    <div class="sidebar-widget mb-30">
                        <div class="sidebar-title mb-10">
                            <h3>tags</h3>
                        </div>
                        <div class="sidebar-widget-body">
                            <div class="product-tag">
                                <a href="#">camera</a>
                                <a href="#">computer</a>
                                <a href="#">tablet</a>
                                <a href="#">watch</a>
                                <a href="#">smart phones</a>
                                <a href="#">handbag</a>
                                <a href="#">shoe</a>
                                <a href="#">men</a>
                            </div>
                        </div>
                    </div>
                    <!-- product tag end -->
                </div>
            </div>
            <!-- sidebar end -->
            <!-- product main wrap start -->
            <div class="col-lg-9 order-1 order-lg-2">
                <div class="shop-banner img-full">
                    <img src="~/Content/theme/assets/img/banner/banner_static1.jpg" alt="">
                </div>
                <!-- product view wrapper area start -->
                <div class="shop-product-wrapper pt-34">
                    <!-- shop product top wrap start -->
                    <div class="shop-top-bar">
                        <div class="row">
                            <div class="col-lg-7 col-md-6">
                                <div class="top-bar-left">
                                    <div class="product-view-mode mr-70 mr-sm-0">
                                        <a class="active" href="#" data-target="grid"><i class="fa fa-th"></i></a>
                                        <a href="#" data-target="list"><i class="fa fa-list"></i></a>
                                    </div>
                                    <div class="product-amount">
                                        <p>Showing All Products</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-md-6">
                                <div class="top-bar-right">
                                    <div class="product-short">
                                        <p>Sort By : </p>
                                        <select class="nice-select" name="sortby">
                                            <option value="trending">Relevance</option>
                                            <option value="sales">Name (A - Z)</option>
                                            <option value="sales">Name (Z - A)</option>
                                            <option value="rating">Price (Low &gt; High)</option>
                                            <option value="date">Rating (Lowest)</option>
                                            <option value="price-asc">Model (A - Z)</option>
                                            <option value="price-asc">Model (Z - A)</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- shop product top wrap start -->
                    <!-- product item start -->
                    <div class="shop-product-wrap grid row">
                        @foreach (var product in Model.Manufacturers)
                        {
                            var picURL = product.ProductPictures != null && product.ProductPictures.Count > 0 ?
                                        "/Content/images/" +
                                            product.ProductPictures.First().Picture.PictureURL :
                                                   "~/Content/theme/assets/img/product/product-img1.jpg";
                            var picURL2 = product.ProductPictures != null && product.ProductPictures.Count > 0 ?
                                        "/Content/images/" +
                                            product.ProductPictures.Last().Picture.PictureURL :
                                                   "~/Content/theme/assets/img/product/product-img1.jpg";

                            <div class="col-lg-3 col-md-4 col-sm-6">
                                <!-- product single grid item start -->
                                <div class="product-item fix mb-30">
                                    <div class="product-thumb">
                                        <a href="@Url.Action("DetailProduct","Product",new { ID=product.ID})" name="ProductID" class="clickmevai" data-id="@product.ID">
                                            <img src="@picURL" class="img-pri" alt="">
                                            <img src="@picURL2" class="img-sec" alt="">
                                        </a>
                                        <div class="product-label">
                                            
                                        </div>
                                        <div class="product-action-link">
                                            <button href="@Url.Action("DetailProduct","Product",new { ID=product.ID})" data-toggle="modal" data-target="#quick_view"> <span data-toggle="tooltip" data-placement="left" title="Quick view"><i class="fa fa-search"></i></span> </button>
                                            <button href="#" data-toggle="tooltip" data-placement="left" title="Wishlist"><i class="fa fa-heart-o"></i></button>
                                            <button href="#" data-toggle="tooltip" data-placement="left" title="Compare"><i class="fa fa-refresh"></i></button>
                                            <button type="button" class="addtoCartManufactureWiseProduct" data-id="@product.ID" data-toggle="tooltip" data-placement="left" title="Add to cart"><i class="fa fa-shopping-cart"></i></button>
                                        </div>
                                    </div>
                                    <div class="product-content">
                                        <h4><a href="@Url.Action("DetailProduct","Product",new { ID=product.ID})" name="ProductID" class="clickmevai" data-id="@product.ID">@product.ProductName</a></h4>
                                        <div class="pricebox">
                                            <span class="regular-price"><del>$@product.ProductSalePrice</del></span>
                                            <span class="regular-price">$@product.ProductSalePrice</span>
                                        </div>
                                    </div>
                                </div>
                                <!-- product single grid item end -->

                            </div> <!-- product single column end -->

                        }

                    </div>
                    <!-- product item end -->
                </div>
                <!-- product view wrapper area end -->

            </div>
            <!-- product main wrap end -->
        </div>
    </div>
</div>
<!-- page wrapper end -->
<script>
    $(".clickmevai").click(function (e) {
        debugger;
       /* const dataId = $('.clickmevai').attr("data-id");*/
        $.ajax({
              url: "@Url.Action("MostViewProduct", "Product")",
              method: "post",
              data: {

                  ID: $(this).attr("data-id")
              }
          }).done(function (response) {

          });
    });
</script>
<script>
    var products;
    $(".addtoCartManufactureWiseProduct").click(function () {
        debugger;
        //this code for exiting cookie
        var rxistngCookie = $.cookie('CartProducts');
        if (rxistngCookie != undefined && rxistngCookie != "" && rxistngCookie != null) {
            products = rxistngCookie.split('-');
        }
        else {

            products = [];
        }
        var productID = $(this).attr('data-id');

        products.push(productID);

        //$.cookie('CartProducts', productID);
        $.cookie('CartProducts', products.join('-'), { path: '/' });
        debugger;
        updateCartProducts();
        alert("Product Add to Card")
        // swal("Done", "Product Add To Cart", "success")
    });

    // for cookie
    (function (factory) {
        if (typeof define === 'function' && define.amd) {
            // AMD (Register as an anonymous module)
            define(['jquery'], factory);
        } else if (typeof exports === 'object') {
            // Node/CommonJS
            module.exports = factory(require('jquery'));
        } else {
            // Browser globals
            factory(jQuery);
        }
    }(function ($) {

        var pluses = /\+/g;

        function encode(s) {
            return config.raw ? s : encodeURIComponent(s);
        }

        function decode(s) {
            return config.raw ? s : decodeURIComponent(s);
        }

        function stringifyCookieValue(value) {
            return encode(config.json ? JSON.stringify(value) : String(value));
        }

        function parseCookieValue(s) {
            if (s.indexOf('"') === 0) {
                // This is a quoted cookie as according to RFC2068, unescape...
                s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
            }

            try {
                // Replace server-side written pluses with spaces.
                // If we can't decode the cookie, ignore it, it's unusable.
                // If we can't parse the cookie, ignore it, it's unusable.
                s = decodeURIComponent(s.replace(pluses, ' '));
                return config.json ? JSON.parse(s) : s;
            } catch (e) { }
        }

        function read(s, converter) {
            var value = config.raw ? s : parseCookieValue(s);
            return $.isFunction(converter) ? converter(value) : value;
        }

        var config = $.cookie = function (key, value, options) {

            // Write

            if (arguments.length > 1 && !$.isFunction(value)) {
                options = $.extend({}, config.defaults, options);

                if (typeof options.expires === 'number') {
                    var days = options.expires, t = options.expires = new Date();
                    t.setMilliseconds(t.getMilliseconds() + days * 864e+5);
                }

                return (document.cookie = [
                    encode(key), '=', stringifyCookieValue(value),
                    options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
                    options.path ? '; path=' + options.path : '',
                    options.domain ? '; domain=' + options.domain : '',
                    options.secure ? '; secure' : ''
                ].join(''));
            }

            // Read

            var result = key ? undefined : {},
                // To prevent the for loop in the first place assign an empty array
                // in case there are no cookies at all. Also prevents odd result when
                // calling $.cookie().
                cookies = document.cookie ? document.cookie.split('; ') : [],
                i = 0,
                l = cookies.length;

            for (; i < l; i++) {
                var parts = cookies[i].split('='),
                    name = decode(parts.shift()),
                    cookie = parts.join('=');

                if (key === name) {
                    // If second argument (value) is a function it's a converter...
                    result = read(cookie, value);
                    break;
                }

                // Prevent storing a cookie that we couldn't decode.
                if (!key && (cookie = read(cookie)) !== undefined) {
                    result[name] = cookie;
                }
            }

            return result;
        };

        config.defaults = {};

        $.removeCookie = function (key, options) {
            // Must not alter options, thus extending a fresh object...
            $.cookie(key, '', $.extend({}, options, { expires: -1 }));
            return !$.cookie(key);
        };

    }));
</script>