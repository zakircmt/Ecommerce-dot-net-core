@using Ecommerce.Web.ViewModels
@model Ecommerce.Web.ViewModels.ShopViewModel
@{
    ViewBag.Title = "CategoryWiseProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- page wrapper start -->
<div class="page-main-wrapper">
    <div class="container">
        <div class="row">
            <!-- sidebar start -->
            <div class="col-lg-3 order-2 order-lg-1">
                <div class="shop-sidebar-wrap mt-md-28 mt-sm-28">
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <!-- manufacturer start -->
                    <div class="sidebar-widget mb-30">
                        <div class="sidebar-title mb-10">
                            <h3>Manufacturers</h3>
                        </div>
                        <div class="sidebar-widget-body">
                            <ul>
                                @foreach (var manufacture in Model.Manufacturers)
                                {
                                    <li><i class="fa fa-angle-right"></i><a href="@Url.Action("ManufactureWiseProduct", "SeachingProduct", new { ID = manufacture.ID })">@manufacture.ManufacturerName</a><span>@Model.Products.Where(x => x.ManufacturerID == manufacture.ID).Count()</span></li>
                                }
                            </ul>
                        </div>
                    </div>
                    <!-- manufacturer end -->
                    <!-- pricing filter start -->
                    <div class="sidebar-widget mb-30">
                        <div class="sidebar-title mb-10">
                            <h3>filter by price</h3>
                        </div>
                        <div id="range-slider" style="color:red" class="sidebar-widget-body color">
                            <div class="price-range-wrap">
                                <div class="range-slider">
                                    <form action="#" class="d-flex justify-content-between">
                                        <div class="price-input d-flex align-items-center mb-10">
                                            <label for="amount">Price: </label>
                                            <input type="text" id="amount" value="@Model.Minimum - @Model.Maximum">
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- pricing filter end -->
                    <!-- product tag start -->
                    <div class="sidebar-widget mb-50" style="padding-top:20px">
                        <div class="sidebar-title mb-10">
                            <h3>tags</h3>
                        </div>
                        <div class="sidebar-widget-body">
                            <div class="product-tag">
                                <a href="#">camera</a>
                                <a href="#">computer</a>
                                <a href="#">tablet</a>
                                <a href="#">watch</a>
                                <a href="#">smart phones</a>
                                <a href="#">handbag</a>
                                <a href="#">shoe</a>
                                <a href="#">men</a>
                            </div>
                        </div>
                    </div>
                    <!-- product tag end -->
                </div>
            </div>
            <!-- sidebar end -->
            <div class="col-lg-9 order-1 order-lg-2" id="PartialViewFilterProduct">
                @{
                    FilterProductViewModel filterProductViewModel = new FilterProductViewModel();
                    filterProductViewModel.Products = Model.Products;
                    Html.RenderPartial("FilterBySlideProduct", filterProductViewModel);

                }
            </div>
        </div>

    </div>

</div>
<!-- page wrapper end -->
<script>
    var callTimeOut;

    var priceSlider = $("#range-slider").slider({
        range: true,
        min:@Model.Minimum,
        max:@Model.Maximum,
        values: [@Model.Minimum,@Model.Maximum],
        slide: function (event, ui) {
            var minimumPrice = ui.values[0];
            var maximumPrice = ui.values[1];
            debugger;
            $("#amount").val("$" + minimumPrice + ".00" + "-" + "$" + maximumPrice + ".00");
            clearTimeout(callTimeOut);
            callTimeOut = setTimeout(GetData,1000)
            
        }
    });
    function GetData() {
        console.log("Called");
        $.ajax({
            url: '@Url.Action("FilterBySlideProduct", "Shop")',
            data: {
                minimum: priceSlider.slider("values",0),
                maximum: priceSlider.slider("values",1)
            }
        }).done(function (response) {
            $("#PartialViewFilterProduct").html(response)
        }).fail();
    }
</script>

<script>
    var products;
    $(".addtoCartCategoryWiseProduct").click(function () {
        //this code for exiting cookie
        var rxistngCookie = $.cookie('CartProducts');
        if (rxistngCookie != undefined && rxistngCookie != "" && rxistngCookie != null) {
            products = rxistngCookie.split('-');
        }
        else {

            products = [];
        }
        var productID = $(this).attr('data-id');

        products.push(productID);

        //$.cookie('CartProducts', productID);
        $.cookie('CartProducts', products.join('-'), { path: '/' });
        updateCartProducts();
        alert("Product Add to Card")
        // swal("Done", "Product Add To Cart", "success")
    });

    // for cookie
    (function (factory) {
        if (typeof define === 'function' && define.amd) {
            // AMD (Register as an anonymous module)
            define(['jquery'], factory);
        } else if (typeof exports === 'object') {
            // Node/CommonJS
            module.exports = factory(require('jquery'));
        } else {
            // Browser globals
            factory(jQuery);
        }
    }(function ($) {

        var pluses = /\+/g;

        function encode(s) {
            return config.raw ? s : encodeURIComponent(s);
        }

        function decode(s) {
            return config.raw ? s : decodeURIComponent(s);
        }

        function stringifyCookieValue(value) {
            return encode(config.json ? JSON.stringify(value) : String(value));
        }

        function parseCookieValue(s) {
            if (s.indexOf('"') === 0) {
                // This is a quoted cookie as according to RFC2068, unescape...
                s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
            }

            try {
                // Replace server-side written pluses with spaces.
                // If we can't decode the cookie, ignore it, it's unusable.
                // If we can't parse the cookie, ignore it, it's unusable.
                s = decodeURIComponent(s.replace(pluses, ' '));
                return config.json ? JSON.parse(s) : s;
            } catch (e) { }
        }

        function read(s, converter) {
            var value = config.raw ? s : parseCookieValue(s);
            return $.isFunction(converter) ? converter(value) : value;
        }

        var config = $.cookie = function (key, value, options) {

            // Write

            if (arguments.length > 1 && !$.isFunction(value)) {
                options = $.extend({}, config.defaults, options);

                if (typeof options.expires === 'number') {
                    var days = options.expires, t = options.expires = new Date();
                    t.setMilliseconds(t.getMilliseconds() + days * 864e+5);
                }

                return (document.cookie = [
                    encode(key), '=', stringifyCookieValue(value),
                    options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
                    options.path ? '; path=' + options.path : '',
                    options.domain ? '; domain=' + options.domain : '',
                    options.secure ? '; secure' : ''
                ].join(''));
            }

            // Read

            var result = key ? undefined : {},
                // To prevent the for loop in the first place assign an empty array
                // in case there are no cookies at all. Also prevents odd result when
                // calling $.cookie().
                cookies = document.cookie ? document.cookie.split('; ') : [],
                i = 0,
                l = cookies.length;

            for (; i < l; i++) {
                var parts = cookies[i].split('='),
                    name = decode(parts.shift()),
                    cookie = parts.join('=');

                if (key === name) {
                    // If second argument (value) is a function it's a converter...
                    result = read(cookie, value);
                    break;
                }

                // Prevent storing a cookie that we couldn't decode.
                if (!key && (cookie = read(cookie)) !== undefined) {
                    result[name] = cookie;
                }
            }

            return result;
        };

        config.defaults = {};

        $.removeCookie = function (key, options) {
            // Must not alter options, thus extending a fresh object...
            $.cookie(key, '', $.extend({}, options, { expires: -1 }));
            return !$.cookie(key);
        };

    }));
</script>